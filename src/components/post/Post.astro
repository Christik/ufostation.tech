---
import { formatFullDate, addUrlPrefix } from 'src/lib/content';
import { t, readingTime } from 'src/locales';
import SharePost from '../post/Share.astro';

const { content } = Astro.props;
const { title, url, pubDate, updatedDate, heroImage, minutesRead } = content;
---

<style>
  .post__title {
    color: var(--color-text-base);
    margin-bottom: 0.2em;
    font-family: var(--font-family-primary);
  }
  .post__meta {
    color: var(--color-text-secondary);
    font-size: var(--font-size-smaller);
    margin-bottom: var(--layout-padding-base);
  }

  .post__image {
    margin: calc(2 * var(--layout-padding-base)) auto;
    max-width: 100%;
    max-height: 500px;
    display: block;
  }
</style>
<style is:global>
  .post__content {
    margin: calc(2 * var(--layout-padding-base)) 0;
    font-size: var(--font-size-base);
    font-weight: 300;
  }

  .post__content img {
    max-width: 100%;
  }

  .post__content p {
    line-height: 1.4em;
    margin: 1.3em 0;
  }

  .post__content li {
    padding: 0.2em 0;
  }
  .post__content video,
  .post__content iframe {
    display: block;
    text-align: center;
    margin: 1em auto;
    width: 100%;
    min-height: 500px;
  }
</style>
<article class="post">
  <h2 class="post__title">{title}</h2>
  <div class="post__meta">
    {pubDate && <time datetime={pubDate}>{formatFullDate(pubDate)}</time>}
    {
      updatedDate && (
        <>
          • ({t('updated')}{' '}
          <time datetime={updatedDate}>{formatFullDate(updatedDate)}</time>)
        </>
      )
    }
    {minutesRead ? <>• {readingTime(minutesRead)}</> : null}
  </div>
  {
    heroImage && (
      <img
        class="post__image"
        src={addUrlPrefix(import.meta.env.BASE_URL, heroImage)}
        alt={`${t('image')}: ${title}`}
      />
    )
  }
  <div class="post__content">
    <slot />
  </div>
  <SharePost title={title} url={url} />
</article>
